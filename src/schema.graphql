# import * from './generated/prisma.graphql'

type SuccessMessage {
  message: String
}

type Mutation {
  createItem(
    title: String, 
    description: String,
    price: Int,
    image: String,
    largeImage: String
  ): Item!
  updateItem(
    id: ID!,
    title: String,
    description: String,
    price: Int,
  ): Item!
  deleteItem(
    id: ID!,
  ): Item!
  signup(email: String!, password: String!, name: String!): User!
  signin(email: String!, password: String!): User!
  signout: SuccessMessage
  requestReset(email: String!): SuccessMessage
  resetPassword(resetToken: String!, password: String!, confirmPassword: String!): User!
  updatePermissions(permissions: [Permission], userId: ID!): User
  addToCart(id: ID!): CartItem
  removeFromCart(id: ID!): CartItem
}

type Query {
  items(where: ItemWhereInput, orderBy: ItemOrderByInput, skip: Int, first: Int): [Item]!
  # item route could be written as: item(id: ID!): Item
  item(where: ItemWhereUniqueInput!): Item
  itemsConnection(where: ItemWhereInput): ItemConnection!
  me: User
  # an array itself is a required return but there can be nothing inside it
  users: [User]!
}

# we don't want to provide all user interfaces so we specify the type here
type User {
  id: ID!
  name: String!
  email: String!
  permissions: [Permission!]!
  cart: [CartItem!]!
}